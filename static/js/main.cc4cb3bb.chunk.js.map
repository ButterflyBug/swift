{"version":3,"sources":["Details.js","Validator.js","App.js","serviceWorker.js","index.js"],"names":["TYPES","type","option","FIELDS_DESCRIPTION","20","38J","83J","30T","30V","36","32B","53A","33B","58J","92B","TOOLTIPS","PAYD","VALU","EARL","FXDT","ENTL","TXFR","NETT","Details","_this","this","react_default","a","createElement","Row_default","as","renderAccountsNumber","renderCurrencyField","renderDates","renderCustomField","ast","getAccountNumberFromFin","renderField","renderRate","undefined","renderIdentification","renderDate","renderFloat","renderCurrency","name","split","map","item","i","key","find","line","includes","dateString","date","moment","format","fromNow","floatSting","precision","arguments","length","parseFloat","replace","toFixed","amount","currency","mapper","_this2","findType","field","renderType","_this3","join","_this4","_this5","_this6","label","value","Fragment","OverlayTrigger_default","placement","overlay","Tooltip_default","Col_default","xs","attributes","details","props","parsedSwift","block4","filter","element","Component","Validator","className","md","Badge_default","variant","validateNettAmount","validatePstaAmount","validateValueDate","validateTradeDate","validateRate","validateFundAccount","validateNostoAccount","orderAccount","orderJSON","fundAccount","transactionJSON","fundAccountNumber","orderAccountNumber","matchingAccount","accounts","mapping","account","fund","validation","nostroAccount","nostroAccountNumber","nostro","orderRate","rate","buy","sell","computedRate","orderValue","transactionValue","orderValueDate","correctOrderValueDate","isAfter","renderAmountValidator","valueLeft","valueRight","valid","badgeVariant","json","qualifier","parser","SwiftParser","FALLBACK_FORMAT","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","onOrderChange","bind","assertThisInitialized","onTransactionChange","onAccountChange","event","target","setState","parse","accountDetails","slice","lines","block_1","block_2","block_3","block_4","e","tryParse","message","Navbar_default","bg","Brand","href","Collapse","id","Nav_default","Link","Text","process","Container_default","Form_default","Group","controlId","Control","placeholder","rows","onChange","src_Validator","src_Details","JSONPretty_default","data","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc4cb3bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger'\nimport Tooltip from 'react-bootstrap/Tooltip'\nimport moment from 'moment';\nimport 'moment/locale/pl';\n\nimport './App.css';\n\nconst TYPES = {\n  \"Account number\": {type: \"97\", option: \"A\"},\n  \"Dates\": {type: \"98\", option: \"A\"},\n  \"Currency\": {type: \"19\", option: \"B\"}\n}\n\nconst FIELDS_DESCRIPTION = {\n  \"20\": \"Sender's Reference\",\n  \"38J\": \"Client\",\n  \"83J\": \"Fund\",\n  \"30T\": \"Trade Date\",\n  \"30V\": \"Value Date\",\n  \"36\": \"Exchange Rate\",\n  \"32B\": \"Amount Bought\",\n  \"53A\": \"Delivery Agent\",\n  \"33B\": \"Amount Sold\",\n  \"58J\": \"Beneficiary Institution\",\n  \"92B\": \"Rate\"\n}\n\nconst TOOLTIPS = {\n  \"PAYD\": \"Payment Date/Time\",\n  \"VALU\": \"Value Date/Time\",\n  \"EARL\": \"Earliest Payment Date/Time\",\n  \"FXDT\": \"FX Rate Fixing Date/Time\",\n  \"ENTL\": \"Entitled Amount\",\n  \"TXFR\": \"Tax Free Amount\",\n  'NETT': \"Net Cash Amount\"\n}\n\nclass Details extends Component {\n  render() {\n    return (\n      <Row as=\"dl\">\n        {this.renderAccountsNumber()}\n        {this.renderCurrencyField()}\n        {this.renderDates()}\n        {this.renderCustomField('83', 'J', 'Fund number', (ast) => { return this.getAccountNumberFromFin(ast) })}\n        {this.renderCustomField('58', 'J', 'Nostro number', (ast) => { return this.getAccountNumberFromFin(ast) })}\n        {this.renderField(\"92\", \"B\", (ast) => { return this.renderRate(ast) })}\n        {this.renderField(\"20\", undefined, (ast) => { return ast['Value'] })}\n        {this.renderField(\"83\", 'J', (ast) => { return this.renderIdentification(ast['Party Identification']) })}\n        {this.renderField(\"30\", 'T', (ast) => { return this.renderDate(ast['Date']) })}\n        {this.renderField(\"30\", 'V', (ast) => { return this.renderDate(ast['Date']) })}\n        {this.renderField(\"36\", undefined, (ast) => { return this.renderFloat(ast['Rate']) })}\n        {this.renderField(\"32\", 'B', (ast) => { return this.renderCurrency(ast['Amount'], ast['Currency']) })}\n        {this.renderField(\"33\", 'B', (ast) => { return this.renderCurrency(ast['Amount'], ast['Currency']) })}\n        {this.renderField(\"53\", 'A', (ast) => { return ast['Identifier Code'] })}\n        {this.renderField(\"58\", 'J', (ast) => { return this.renderIdentification(ast['Party Identification'])})}\n      </Row>\n    )\n  }\n\n  renderRate(ast) {\n    return ast['First Currency Code'] + '/' + ast['Second Currency Code'] + ' ' + this.renderFloat(ast['Rate'])\n  }\n\n  renderIdentification(name) {\n    return name.split('\\n').map((item, i) => {\n      return <p key={i}>{item}</p>;\n    })\n  }\n\n  getAccountNumberFromFin(ast) {\n    const identify = ast['Party Identification']\n    return identify.split('\\n').find((line) => { return line.includes('ACCT/') }).split('/')[2]\n  }\n\n  renderDate(dateString) {\n    const date = moment(dateString, \"YYYYMMDD\")\n    return date.format('DD/MM/YYYY') + \" (\" + date.fromNow() + \")\"\n  }\n\n  renderFloat(floatSting, precision = 2) {\n    return parseFloat(floatSting.replace(',', '.')).toFixed(precision)\n  }\n\n  renderCurrency(amount, currency) {\n    return this.renderFloat(amount) + \" \" + currency\n  }\n\n  renderCustomField(type, option, name, mapper) {\n    const fields = this.findType({type: type, option: option})\n\n    return fields.map((field) => {\n      return this.renderType(name, mapper(field.ast))\n    })\n  }\n\n  renderField(type, option, mapper) {\n    const fields = this.findType({type: type, option: option})\n\n    return fields.map((field) => {\n      return this.renderType(FIELDS_DESCRIPTION[[type, option].join('')], mapper(field.ast))\n    })\n  }\n\n  renderCurrencyField() {\n    const types = this.findType(TYPES[\"Currency\"])\n\n    return types.map((type) => {\n      return this.renderType(type.ast[\"Qualifier\"],  this.renderCurrency(type.ast['Amount'], type.ast['Currency'] || type.ast['Currency Code']))\n    })\n  }\n\n  renderDates() {\n    const types = this.findType(TYPES[\"Dates\"])\n\n    return types.map((type) => {\n      const date = moment(type.ast[\"Date\"], \"YYYYMMDD\")\n      return this.renderType(type.ast[\"Qualifier\"], date.format('DD/MM/YYYY') + \" (\" + date.fromNow() + \")\")\n    })\n  }\n\n  renderAccountsNumber() {\n    const types = this.findType(TYPES[\"Account number\"])\n\n    return types.map((type) => {\n      return this.renderType(\"Account Number (\" + type.ast[\"Qualifier\"] + \")\" , type.ast[\"Account Number\"])\n    })\n  }\n\n  renderType(label, value) {\n\n    return (\n      <React.Fragment>\n          <OverlayTrigger\n            placement=\"left\"\n            overlay={\n              <Tooltip>{TOOLTIPS[label] || \"No information\"}</Tooltip>\n            }\n          >\n            <Col as=\"dt\" xs={5}>{label}</Col>\n          </OverlayTrigger>\n        <Col as=\"dd\" xs={7}>{value}</Col>\n      </React.Fragment>\n    )\n  }\n\n  findType(attributes) {\n    const details = this.props.parsedSwift.block4\n    if(details) {\n      return details.filter((element)=> {\n        return element.type === attributes.type && element.option === attributes.option\n      })\n    } else {\n      return []\n    }\n  }\n}\n\nexport default Details;\n","import React, { Component } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Badge from 'react-bootstrap/Badge';\nimport moment from 'moment';\nimport 'moment/locale/pl';\n\nimport './App.css';\n\nclass Validator extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <Row className=\"center\">\n        <Col md=\"4\" xs={4}><strong>What the order contains</strong></Col>\n        <Col xs={4}>\n          <Badge className=\"mr-sm-2\" variant='success'>Valid</Badge>\n          <Badge variant='danger'>Invalid</Badge>\n        </Col>\n          <Col xs={4}><strong>What it should be</strong></Col>\n        </Row>\n        <hr className=\"col-xs-12\"/>\n        <Row>\n          {this.validateNettAmount()}\n          {this.validatePstaAmount()}\n          {this.validateValueDate()}\n          {this.validateTradeDate()}\n          {this.validateRate()}\n          {this.validateFundAccount()}\n          {this.validateNostoAccount()}\n        </Row>\n      </React.Fragment>\n    )\n  }\n\n  validateFundAccount() {\n    let orderAccount = this.findType(this.props.orderJSON, '97', 'A', 'SAFE')[0]\n    let fundAccount = this.findType(this.props.transactionJSON, '83', 'J')[0]\n\n    if(!orderAccount || !fundAccount) { return }\n\n    let fundAccountNumber = this.getAccountNumberFromFin(fundAccount.ast)\n    let orderAccountNumber = orderAccount.ast['Account Number']\n\n    let matchingAccount = this.props.accounts.find((mapping) => {\n      return orderAccountNumber.includes(mapping.account)\n    }) || {fund: 'Unknow number'}\n\n    let validation = matchingAccount.fund === fundAccountNumber\n\n    return this.renderType('Fund Account Number', orderAccountNumber, matchingAccount.fund, validation)\n  }\n\n  validateNostoAccount() {\n    let orderAccount = this.findType(this.props.orderJSON, '97', 'A', 'SAFE')[0]\n    let nostroAccount = this.findType(this.props.transactionJSON, '58', 'J')[0]\n\n    if(!orderAccount || !nostroAccount) { return }\n\n    let nostroAccountNumber = this.getAccountNumberFromFin(nostroAccount.ast)\n    let orderAccountNumber = orderAccount.ast['Account Number']\n\n    let matchingAccount = this.props.accounts.find((mapping) => {\n      return orderAccountNumber.includes(mapping.account)\n    }) || {nostro: 'Unknow number'}\n\n    let validation = matchingAccount.nostro === nostroAccountNumber\n\n    return this.renderType('Nostro Account Number', '', matchingAccount.nostro, validation)\n  }\n\n  getAccountNumberFromFin(ast) {\n    const identify = ast['Party Identification']\n    return identify.split('\\n').find((line) => { return line.includes('ACCT/') }).split('/')[2]\n  }\n\n  validateRate() {\n    let orderRate = this.findType(this.props.orderJSON, '92', 'B', 'EXCH')[0]\n    let rate = this.findType(this.props.transactionJSON, '36')[0]\n    let buy = this.findType(this.props.transactionJSON, '32', 'B')[0]\n    let sell = this.findType(this.props.transactionJSON, '33', 'B')[0]\n\n    if(!rate || !buy || !sell || !orderRate) { return }\n\n    buy = this.renderFloat(buy.ast['Amount'])\n    sell = this.renderFloat(sell.ast['Amount'])\n    rate = this.renderFloat(rate.ast['Rate'])\n    orderRate = this.renderFloat(orderRate.ast['Rate'])\n    const computedRate = (sell / buy).toFixed(2)\n\n    return this.renderType('Rate', orderRate, rate + ' (Calculated: ' + computedRate + ')', rate === orderRate)\n  }\n\n  validateTradeDate() {\n    let orderValue = this.findType(this.props.orderJSON, '98', 'A', 'VALU')[0]\n    let transactionValue = this.findType(this.props.transactionJSON, '30', 'T')[0]\n\n    if(!orderValue || !transactionValue) { return }\n\n    orderValue = orderValue.ast\n    transactionValue = transactionValue.ast\n\n    let orderValueDate = moment(orderValue['Date'], \"YYYYMMDD\")\n    let correctOrderValueDate = moment(orderValue['Date'], \"YYYYMMDD\")\n\n    if(!moment().isAfter(orderValueDate)) { correctOrderValueDate = moment() }\n\n    const validation = correctOrderValueDate.format('YYYYMMDD') === transactionValue['Date']\n\n    return this.renderType(\n      'Trade Date',\n      this.renderDate(orderValueDate),\n      this.renderDate(correctOrderValueDate),\n      validation)\n  }\n\n  validateValueDate() {\n    let orderValue = this.findType(this.props.orderJSON,'98', 'A', 'VALU')[0]\n    let transactionValue = this.findType(this.props.transactionJSON, '30', 'V')[0]\n\n    if(!orderValue || !transactionValue) { return }\n\n    orderValue = orderValue.ast\n    transactionValue = transactionValue.ast\n\n    let orderValueDate = moment(orderValue['Date'], \"YYYYMMDD\")\n    const validation = orderValueDate.format('YYYYMMDD') === transactionValue['Date']\n\n    return this.renderType('Value Date', this.renderDate(orderValueDate), this.renderDate(moment(transactionValue['Date'], 'YYYYMMDD')), validation)\n  }\n\n\n  validatePstaAmount() {\n    let orderValue = this.findType(this.props.orderJSON,'19', 'B', 'PSTA')[0]\n    let transactionValue = this.findType(this.props.transactionJSON, '32', 'B')[0]\n\n    if(!orderValue || !transactionValue) { return }\n\n    orderValue = orderValue.ast\n    transactionValue = transactionValue.ast\n\n    return this.renderAmountValidator(orderValue, transactionValue, 'Buy Currency Amount')\n  }\n\n  validateNettAmount() {\n    let orderValue = this.findType(this.props.orderJSON, '19', 'B', 'NETT')[0]\n    let transactionValue = this.findType(this.props.transactionJSON, '33', 'B')[0]\n\n    if(!orderValue || !transactionValue) { return }\n\n    orderValue = orderValue.ast\n    transactionValue = transactionValue.ast\n\n    return this.renderAmountValidator(orderValue, transactionValue, 'Sell Currency Amount')\n  }\n\n  renderAmountValidator(orderValue, transactionValue, label) {\n    const validation = this.renderFloat(orderValue['Amount']) === this.renderFloat(transactionValue['Amount']) && orderValue['Currency Code'] === transactionValue['Currency']\n    return this.renderType(label, this.renderCurrency(orderValue), this.renderCurrency(transactionValue), validation)\n  }\n\n  renderCurrency(ast) {\n    return this.renderFloat(ast['Amount']) + \" \" + (ast['Currency'] || ast['Currency Code'])\n  }\n\n  renderFloat(floatSting, precision = 2) {\n    return parseFloat(floatSting.replace(',', '.')).toFixed(precision)\n  }\n\n  renderDate(date) {\n    return date.format('DD/MM/YYYY') + \" (\" + date.fromNow() + \")\"\n  }\n\n  renderType(label, valueLeft, valueRight, valid) {\n    const badgeVariant = valid ? 'success' : 'danger'\n\n    return (\n      <React.Fragment>\n        <Col className=\"justify-content-center\" xs={4}>{valueLeft}</Col>\n        <Col className=\"justify-content-center\" xs={4}>\n          <Badge variant={badgeVariant}>{label}</Badge>\n        </Col>\n        <Col className=\"justify-content-center\" xs={4}>{valueRight}</Col>\n      </React.Fragment>\n    )\n  }\n\n  findType(json, type, option, qualifier) {\n    const details = json['block4']\n    if(details) {\n       return details.filter((element)=> {\n         return element.type === type && element.option === option && element.ast[\"Qualifier\"] === qualifier\n       }) || []\n    } else {\n      return []\n    }\n  }\n}\n\nexport default Validator;\n","import React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport SwiftParser from 'swift-mock/lib/swiftParser';\nimport JSONPretty from 'react-json-pretty';\nimport Details from './Details';\nimport './App.css';\nimport Validator from \"./Validator\";\nconst parser = new SwiftParser();\n\nconst FALLBACK_FORMAT = \"F01TESTBIC12XXX0360105154\\n\" +\n  \"O5641057130214TESTBIC34XXX26264938281302141757N\\n\" +\n  \"108:2RDRQDHM3WO\"\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      orderJSON: {},\n      transactionJSON: {},\n      accounts: []\n    }\n\n    this.onOrderChange = this.onOrderChange.bind(this);\n    this.onTransactionChange = this.onTransactionChange.bind(this);\n    this.onAccountChange = this.onAccountChange.bind(this);\n  }\n\n  onOrderChange(event) {\n    const value = event.target.value\n    this.setState({orderJSON: this.parse(value)})\n  }\n\n  onTransactionChange(event) {\n    const value = event.target.value\n    this.setState({transactionJSON: this.parse(value)})\n  }\n\n  onAccountChange(event) {\n    const value = event.target.value\n    const lines = value.split('\\n')\n    const accounts = lines.map((line) => {\n      const accountDetails =line.split(',')\n      const fundAccount = (accountDetails[1] || '').slice(0, -5) + '5-000'\n      return { account: accountDetails[0], fund: fundAccount, nostro: accountDetails[2] }\n    })\n\n    this.setState({accounts: accounts})\n  }\n\n  tryParse(value) {\n    value = value.replace(/\\n{2,}/g, '\\n')\n    value = value.replace(/ :/g, '\\n:')\n\n    const lines = value.split('\\n')\n    const block_1 = \"{1:\" + lines[0] + \"}\"\n    const block_2 = \"{2:\" + lines[1] + \"}\"\n    const block_3 = \"{3:{\" + lines[2] + \"}}\"\n    const block_4 = \"{4:\\n\" + lines.slice(3).join('\\n') + \"\\n-}\"\n\n    return parser.parse(block_1 + block_2 + block_3 + block_4)\n  }\n\n  parse(value) {\n    try {\n      return parser.parse(value)\n    } catch (e) {\n      try {\n        return this.tryParse(value)\n      } catch (e) {\n        try {\n          return this.tryParse(FALLBACK_FORMAT + value)\n        } catch (e) {\n          try {\n            return this.tryParse(FALLBACK_FORMAT + \":\\n\" + value)\n          } catch (e) {\n            return e.message\n          }\n        }\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-2\">\n          <Navbar.Brand href=\"#home\">{'Swift Validator'}</Navbar.Brand>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"./static.html\">Static Version</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n          <Navbar.Collapse className=\"justify-content-end\">\n            <Navbar.Text>\n              Version: <strong>{process.env.REACT_APP_GIT_SHA}</strong>\n            </Navbar.Text>\n          </Navbar.Collapse>\n        </Navbar>\n        <Container className=\"mb-0\">\n        <Row>\n          <Col>\n            <Form>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Control placeholder=\"Swift order\" as=\"textarea\" rows=\"20\" onChange={this.onOrderChange} />\n              </Form.Group>\n            </Form>\n          </Col>\n          <Col>\n            <Form>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Control placeholder=\"Swift transaction\" as=\"textarea\" rows=\"20\" onChange={this.onTransactionChange} />\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n          <Row>\n            <Col xs={12}>\n              <Validator orderJSON={this.state.orderJSON} transactionJSON={this.state.transactionJSON} accounts={this.state.accounts}/>\n            </Col>\n          </Row>\n          <hr className=\"col-xs-12\"/>\n        <Row>\n          <Col xs={6}>\n            <Details parsedSwift={this.state.orderJSON}></Details>\n          </Col>\n          <Col xs={6}>\n            <Details parsedSwift={this.state.transactionJSON}></Details>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={6}>\n            <JSONPretty data={this.state.orderJSON} />\n          </Col>\n          <Col xs={6}>\n            <JSONPretty data={this.state.transactionJSON} />\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <Form>\n              <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                <Form.Control placeholder=\"Accounts\" as=\"textarea\" rows=\"5\" onChange={this.onAccountChange}/>\n              </Form.Group>\n            </Form>\n          </Col>\n        </Row>\n          <Row>\n            <Col>\n              <JSONPretty data={this.state.accounts} />\n            </Col>\n          </Row>\n      </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'react-json-pretty/themes/monikai.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}